name: Tests

on:
  push:
    branches:
      - master
  pull_request: {}
  schedule:
    - cron: '0 23 * * SUN-THU'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref == 'refs/heads/master' && github.run_number || github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.8]

    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Python${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Setup cache
      uses: actions/cache@v2
      env:
        cache-name: test
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-${{ matrix.python-version }}-${{ env.cache-name }}-${{ hashFiles('**/setup.py') }}-v1
        restore-keys: |
          ${{ runner.os }}-${{ matrix.python-version }}-${{ env.cache-name }}-${{ hashFiles('**/setup.py') }}
    # TODO(c-bata): Remove this step after fixing the version constraint of sklearn.
    - name: Install Cython for scikit-learn installation which does not provide Python 3.9 wheel.
      run: pip install --progress-bar off Cython
      if: matrix.python-version == '3.9'

    - name: Install
      run: |
        python -m pip install --upgrade pip
        pip install --progress-bar off -U setuptools
        # Install minimal dependencies and confirm that `import optuna` is successful.
        pip install --progress-bar off .
        python -c 'import optuna'
        optuna --version
        pip install --progress-bar off .[tests]
        pip install --progress-bar off .[optional]
        # Required for samplers_tests/test_samplers.py.
        # TODO(hvy): Fix samplers_tests/test_samplers.py to not require optional dependencies and remove these installs.
        pip install scikit-optimize
        pip install cma
        pip install botorch torch==1.8.0+cpu -f https://download.pytorch.org/whl/torch_stable.html
    - name: Tests
      run: |
        pytest tests --ignore tests/integration_tests

  armv64_job:
      name: Build and Test for arm64
      runs-on: ubuntu-20.04
      steps:
        - uses: actions/checkout@v2
        - name: Set up QEMU
          id: qemu
          uses: docker/setup-qemu-action@v1
        - name: Install and Run tests
          run: |
            docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
              arm64v8/ubuntu:20.04 \
              bash -exc 'apt-get update && apt-get -y install python3 python3-pip python3-venv curl && \
              python3 -m pip install virtualenv && python3 -m venv py38-venv && \
              source py38-venv/bin/activate && \
              python --version && \
              uname -m && \
              whoami && \
              python -m pip install --upgrade pip && \
              pip install --progress-bar off -U setuptools && \
              pip install --progress-bar off . && \
              python -c 'import optuna; print "\n"' && \
              optuna --version && \
              pip install --progress-bar off .[tests] && \
              pip install --progress-bar off .[optional] && \
              pip install scikit-optimize && \
              pip install cma && \
              pip install botorch torch==1.8.0+cpu -f https://download.pytorch.org/whl/torch_stable.html && \
              pytest tests --ignore tests/integration_tests && \
              deactivate'
